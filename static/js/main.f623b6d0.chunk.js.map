{"version":3,"sources":["Components/Hamburger/Hamburger.module.scss","Components/Header/Header.module.scss","assets/content.jpg","assets/rev-bg.jpg","Components/Navigation/Navigation.module.scss","Components/CarouselContainer/CarouselContainer.module.scss","Components/Hamburger/Hamburger.tsx","Components/Navigation/Navigation.tsx","Components/Header/Header.tsx","Components/CarouselContainer/CarouselContainer.tsx","Components/Content/Home/Home.tsx","scripts/Router.tsx","Components/Content/Content.tsx","App.tsx","serviceWorker.ts","index.tsx","Components/Content/Home/Home.module.scss","assets/bag1.png"],"names":["module","exports","Hamburger","props","a","isOpen","s","open","className","onClick","Navigation","useState","setIsOpen","onClickHandler","Fragment","closed","style","backgroundImage","contentBg","menu","href","Header","responsive","desktop","breakpoint","max","min","items","mobile","Carousel","autoPlay","infinite","autoPlaySpeed","showDots","removeArrowOnDeviceType","imgBlock","src","bag1","draggable","Home","HomeCarousel","bgImg","content","ContentRouter","Content","routeResult","useRoutes","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f623b6d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Hamburger\":\"Hamburger_Hamburger__35Uhr\",\"open\":\"Hamburger_open__37ERH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__14T40\"};","module.exports = __webpack_public_path__ + \"static/media/content.e7560b7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rev-bg.0f5bb326.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation_Navigation__2Vq6r\",\"menu\":\"Navigation_menu__3mlSR\",\"open\":\"Navigation_open__oUrUi\",\"closed\":\"Navigation_closed__24Jav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgBlock\":\"CarouselContainer_imgBlock__ommhn\"};","import React from \"react\";\r\nimport s from \"./Hamburger.module.scss\";\r\n\r\ninterface IProps {\r\n  onClick: () => void;\r\n  isOpen: boolean;\r\n}\r\n\r\nconst Hamburger = (props: IProps) => {\r\n  const a = props.isOpen ? s.open : \"\";\r\n\r\n  return (\r\n    <div className={`${s.Hamburger} ${a}`} onClick={props.onClick}>\r\n      <span />\r\n      <span />\r\n      <span />\r\n      <span />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hamburger;\r\n","import s from \"./Navigation.module.scss\";\r\nimport React, { useState } from \"react\";\r\nimport Hamburger from \"./../Hamburger/Hamburger\";\r\nimport contentBg from \"../../assets/content.jpg\";\r\nimport {A} from \"hookrouter\";\r\n\r\nfunction Navigation() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const onClickHandler = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className={`${s.Navigation} ${isOpen ? s.open : s.closed}`}\r\n        style={{\r\n          backgroundImage: `url(${contentBg})`\r\n        }}\r\n      >\r\n      <div className={s.menu}\r\n\r\n      >\r\n        <A href=\"/\" onClick={onClickHandler}>\r\n          Home\r\n        </A>\r\n        <A href=\"/\" onClick={onClickHandler}>\r\n          About\r\n        </A>\r\n        <A href=\"/\" onClick={onClickHandler}>\r\n          MORE\r\n        </A>\r\n              </div>\r\n\r\n                    <Hamburger isOpen={isOpen} onClick={onClickHandler} />\r\n\r\n      </div>\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport s from \"./Header.module.scss\"\r\nimport Navigation from \"./../Navigation/Navigation\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.Header}>\r\n            <Navigation></Navigation>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport s from \"./CarouselContainer.module.scss\";\r\n// https://www.npmjs.com/package/react-multi-carousel\r\nimport Carousell from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport bag1 from \"../../assets/bag1.png\";\r\n\r\nconst responsive = {\r\n  desktop: {\r\n    breakpoint: { max: 5000, min: 760 },\r\n    items: 1\r\n  },\r\n\r\n  mobile: {\r\n    breakpoint: { max: 760, min: 0 },\r\n    items: 1\r\n  }\r\n};\r\nconst Carousel = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className={s.Carousel}>\r\n        <Carousell\r\n          autoPlay={false}\r\n          infinite={true}\r\n          autoPlaySpeed={3000}\r\n          responsive={responsive}\r\n          showDots={true}\r\n          removeArrowOnDeviceType={[\"desktop\",\"mobile\"]}\r\n        >\r\n          <div className={s.imgBlock}>\r\n            <img\r\n              src={bag1}\r\n              draggable={false}\r\n            />\r\n          </div>\r\n          <div className={s.imgBlock}>\r\n            <img\r\n              src={bag1}\r\n              // height={\"830px\"}\r\n              draggable={false}\r\n            />\r\n          </div>\r\n          <div className={s.imgBlock}>\r\n            <img\r\n              src={bag1}\r\n              // height={\"830px\"}\r\n              draggable={false}\r\n            />\r\n          </div>\r\n        </Carousell>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n","import React from 'react';\r\nimport s from \"./Home.module.scss\"\r\nimport Carousel from \"../../CarouselContainer/CarouselContainer\";\r\nimport bgImg from \"../../../assets/rev-bg.jpg\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className={s.Home}\r\n\r\n        >\r\n        <div className={s.HomeCarousel}\r\n             style={{\r\n                 backgroundImage: `url(${bgImg})`\r\n             }}\r\n        >\r\n            <Carousel></Carousel>\r\n        </div>\r\n            <div\r\n\r\n                className={s.content}\r\n            >HERE WOULD BE SOME CONTEXT</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Home from \"../Components/Content/Home/Home\";\r\n\r\nconst ContentRouter = {\r\n    \"/\": () => <Home />\r\n};\r\n\r\nexport default ContentRouter;\r\n","import React from \"react\";\r\nimport s from \"./Content.module.scss\";\r\nimport ContentRouter from \"../../scripts/Router\";\r\nimport { useRoutes } from \"hookrouter\";\r\nimport Home from \"./Home/Home\";\r\n\r\nfunction Content() {\r\n  const routeResult = useRoutes(ContentRouter);\r\n\r\n  return <div className={s.Content}>{routeResult || <Home />}</div>;\r\n}\r\n\r\nexport default Content;\r\n","import React from 'react';\nimport './App.css';\nimport Header from \"./Components/Header/Header\";\nimport Content from \"./Components/Content/Content\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomeCarousel\":\"Home_HomeCarousel__309I5\",\"content\":\"Home_content__1Hvyp\"};","module.exports = __webpack_public_path__ + \"static/media/bag1.3a5cf862.png\";"],"sourceRoot":""}