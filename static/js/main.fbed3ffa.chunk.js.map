{"version":3,"sources":["components/Layout/index.tsx","mobx/coursesStore.ts","modules/axios.ts","assets/cycle.jpg","assets/bricks.jpg","assets/sofa.jpg","assets/weights.jpg","routes/index.ts","pages/coursesPage/index.tsx","pages/todosPage/index.tsx","pages/peoplesPage/index.tsx","pages/noMatchPage/index.tsx","RouterComponent.tsx","mobx/Store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["withRouter","props","children","history","item","location","pathname","className","onClick","push","CoursesRoute","path","TodosRoute","PeoplesRoute","coursesStore","_temp","categories","minutes","blocks","Promise","allSettled","res","rej","a","axios","get","respData","forEach","index","status","value","data","map","el","i","this","coursesInfo","resolve","observable","action","computed","component","observer","useState","isLoading","setIsLoading","coursesData","tab","setTab","images","cycleImg","bricksImg","sofaImg","weightsImg","useEffect","initCourses","style","background","Math","floor","random","time","getBlock","exact","NoMatchRoute","RouterComponent","routes","configure","disableErrorBoundaries","StoreMobx","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbed3ffa.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.scss\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { CoursesRoute, PeoplesRoute, TodosRoute } from \"../../routes\";\n\ninterface IProps\n  extends React.HTMLAttributes<HTMLElement>,\n    RouteComponentProps {}\n\nconst LayoutComponent = (props: IProps) => {\n  const { children, history, location } = props;\n\n  const item = location.pathname;\n  return (\n    <div className=\"app\">\n      <nav className={\"sider\"}>\n        <i\n          onClick={() => history.push(CoursesRoute.path)}\n          className={`ri-message-fill ${\n            item === CoursesRoute.path ? \"active\" : \"\"\n          }`}\n        />\n        <i\n          onClick={() => history.push(TodosRoute.path)}\n          className={`ri-todo-fill ${item === TodosRoute.path ? \"active\" : \"\"}`}\n        />\n        <i\n          onClick={() => history.push(PeoplesRoute.path)}\n          className={`ri-team-fill ${\n            item === PeoplesRoute.path ? \"active\" : \"\"\n          }`}\n        />\n      </nav>\n      {children}\n    </div>\n  );\n};\n\nexport default withRouter(LayoutComponent);\n","import { createContext } from \"react\";\nimport { action, computed, observable } from \"mobx\";\nimport { getBlocks, getCategories, getMinutes } from \"../modules/axios\";\n\ninterface IMinuteProp {\n  id: number;\n  time: number;\n}\ninterface ICoursesInfo {\n  categories: Array<string>;\n  minutes: Array<IMinuteProp>;\n  blocks: Array<string>;\n}\nexport class CoursesStore {\n  @observable\n  private coursesInfo: ICoursesInfo = {\n    categories: [],\n    minutes: [],\n    blocks: [],\n  };\n\n  @action\n  public async initCourses(): Promise<[boolean, boolean]> {\n    try {\n      const _temp: ICoursesInfo = {\n        categories: [],\n        minutes: [],\n        blocks: [],\n      };\n\n      const resData = await Promise.allSettled([\n        getCategories(),\n        getMinutes(),\n        getBlocks(),\n      ]);\n      resData.forEach((res: PromiseSettledResult<any>, index) => {\n        switch (index) {\n          case 0:\n            _temp.categories =\n              res.status === \"fulfilled\"\n                ? //incorrect order from server\n                  res?.value?.data?.categories?.map((el: any, i: number) =>\n                    i === 1\n                      ? res?.value?.data?.categories[2]\n                      : i === 2\n                      ? res?.value?.data?.categories[1]\n                      : el\n                  )\n                : null;\n            break;\n          case 1:\n            _temp.minutes =\n              res.status === \"fulfilled\" ? res?.value?.data?.minutes : null;\n\n            break;\n          case 2:\n            _temp.blocks =\n              res.status === \"fulfilled\" ? res?.value?.data?.blocks : null;\n\n            break;\n          default:\n            break;\n        }\n      });\n      this.coursesInfo = _temp;\n\n      // Promise<[success, error]>\n      return Promise.resolve([true, false]);\n    } catch (e) {\n      return Promise.resolve([false, true]);\n    }\n  }\n\n  @action\n  public async clearAll() {\n    this.coursesInfo = {\n      categories: [],\n      minutes: [],\n      blocks: [],\n    };\n  }\n\n  @computed\n  public get coursesData() {\n    return this.coursesInfo;\n  }\n}\n\nconst coursesStore = new CoursesStore();\n\nexport const coursesStoreContext = createContext(coursesStore);\nexport default coursesStore;\n","import axios from \"axios\";\n\nexport const getCategories = () => {\n  return new Promise(async (res, rej) => {\n    try {\n      const respData = await axios.get(\n        \"https://rpback.com/api/games/test_categories?project_id=2\"\n      );\n      return res(respData);\n    } catch (e) {\n      rej(e);\n    }\n  });\n};\n\nexport const getMinutes = () => {\n  return new Promise(async (res, rej) => {\n    try {\n      const respData = await axios.get(\n        \"https://rpback.com/api/games/test_minutes?project_id=2\"\n      );\n      return res(respData);\n    } catch (e) {\n      rej(e);\n    }\n  });\n};\n\nexport const getBlocks = () => {\n  return new Promise(async (res, rej) => {\n    try {\n      const respData = await axios.get(\n        \"https://rpback.com/api/games/test_blocks?project_id=2\"\n      );\n      return res(respData);\n    } catch (e) {\n      rej(e);\n    }\n  });\n};\n","export default __webpack_public_path__ + \"static/media/cycle.21a683f6.jpg\";","export default __webpack_public_path__ + \"static/media/bricks.5e8b9ed6.jpg\";","export default __webpack_public_path__ + \"static/media/sofa.c26366e8.jpg\";","export default __webpack_public_path__ + \"static/media/weights.c13708c2.jpg\";","import Courses from \"./../pages/coursesPage\";\nimport NoMatchPage from \"../pages/noMatchPage\";\nimport TodosPage from \"../pages/todosPage\";\nimport PeoplesPage from \"../pages/peoplesPage\";\n\nexport const CoursesRoute = {\n  component: Courses,\n  exact: true,\n  path: \"/\",\n};\nexport const TodosRoute = {\n  component: TodosPage,\n  exact: true,\n  path: \"/todos\",\n};\nexport const PeoplesRoute = {\n  component: PeoplesPage,\n  exact: true,\n  path: \"/peoples\",\n};\n\nexport const NoMatchRoute = {\n  component: NoMatchPage,\n};\n","import React, { useEffect, useState } from \"react\";\nimport Layout from \"./../../components/Layout\";\nimport { observer } from \"mobx-react\";\nimport \"./index.scss\";\nimport coursesStore from \"../../mobx/coursesStore\";\nimport cycleImg from \"./../../assets/cycle.jpg\";\nimport bricksImg from \"./../../assets/bricks.jpg\";\nimport sofaImg from \"./../../assets/sofa.jpg\";\nimport weightsImg from \"./../../assets/weights.jpg\";\n\nconst CoursesPage = observer(() => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const [tab, setTab] = useState<string>(\n    coursesStore.coursesData.categories[0]\n  );\n  let coursesData = coursesStore.coursesData;\n  const images = [cycleImg, bricksImg, sofaImg, weightsImg];\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      const [success, error] = await coursesStore?.initCourses();\n      if (success) {\n      } else if (error) {\n      }\n      setIsLoading(false);\n    })();\n  }, []);\n\n  useEffect(() => {\n    setTab(coursesStore.coursesData.categories[0]);\n  }, [coursesStore.coursesData]);\n\n  const getBlock = (el: string, index: number) => {\n    return (\n      <div\n        className={\"tab-content__block\"}\n        style={{\n          background: `url(${\n            images[Math.floor(Math.random() * 4)]\n          }) no-repeat center / cover`,\n        }}\n        key={\"block\" + index}\n      >\n        <div className={\"flex-space-between  full-width\"}>\n          <div className={\"title\"}>{el}</div>\n          <div className={\"time\"}>\n            {coursesStore?.coursesData?.minutes\n              ? coursesStore.coursesData.minutes[index].time + \" min\"\n              : \"\"}\n          </div>\n        </div>\n        <div className={\"lessons\"}>24 lessons</div>\n\n        <div className={\"play-button-wrapper\"}>\n          {\" \"}\n          <div className={\"play-button\"} />\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Layout>\n      <div className={`content ${isLoading ? \"opacity\" : \"\"}`}>\n        <div className={\"flex-space-between full-width wrap\"}>\n          <div className={\"top-title\"}>Courses</div>\n          <div className={\"tabs\"}>\n            {coursesData.categories.map((el, i) => (\n              <span\n                onClick={() => setTab(el)}\n                className={`courses-tab ${tab === el ? \"active\" : \"\"}`}\n                key={\"tab\" + i}\n              >\n                {el}\n              </span>\n            ))}\n          </div>\n        </div>\n        <div className={\"tab-content\"}>\n          {coursesData.blocks.map((el, i) => getBlock(el, i))}\n        </div>\n      </div>\n    </Layout>\n  );\n});\n\nexport default CoursesPage;\n","import React from \"react\";\nimport Layout from \"./../../components/Layout\";\n\nconst TodosPage = () => {\n  return (\n    <Layout>\n      <div className={\"content\"}>\n        <div className={\"top-title\"}>Todos</div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default TodosPage;\n","import React from \"react\";\nimport Layout from \"./../../components/Layout\";\n\nconst PeoplesPage = () => {\n  return (\n    <Layout>\n      <div className={\"content\"}>\n        <div className={\"top-title\"}>Peoples</div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default PeoplesPage;\n","import React from \"react\";\r\nimport Layout from \"./../../components/Layout\";\r\n\r\nconst NoMatchPage = () => {\r\n    return <Layout/>;\r\n};\r\n\r\nexport default NoMatchPage;\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport * as routes from \"./routes\";\n\nconst RouterComponent = () => {\n  return (\n    <Switch>\n      <Route {...routes.CoursesRoute} />\n      <Route {...routes.TodosRoute} />\n      <Route {...routes.PeoplesRoute} />\n      <Route {...routes.NoMatchRoute} />\n    </Switch>\n  );\n};\n\nexport default RouterComponent;\n","import { configure } from \"mobx\";\r\nimport {CoursesStore} from \"./coursesStore\";\r\nimport coursesStore from \"./coursesStore\";\r\n\r\nconfigure({\r\n  disableErrorBoundaries: true,\r\n});\r\n\r\nconst StoreMobx = {\r\n  coursesStore\r\n};\r\n\r\nexport interface IStoreMobx {\r\n  coursesStore: CoursesStore\r\n}\r\n\r\nexport default StoreMobx;\r\n","import React from \"react\";\n// import \"./App.scss\";\nimport \"remixicon/fonts/remixicon.css\";\nimport RouterComponent from \"./RouterComponent\";\nimport { Provider } from \"mobx-react\";\nimport StoreMobx from \"./mobx/Store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Provider {...StoreMobx}>\n      <BrowserRouter>\n        <RouterComponent />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}